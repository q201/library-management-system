// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  username      String        @unique
  password      String
  role          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  circulations  Circulation[]
  fines         Fine[]
  notifications Notification[]
}

model Book {
  id           String        @id @default(cuid())
  title        String
  author       String
  isbn         String        @unique
  publishedAt  DateTime
  copies       Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  catalog      Catalog?      @relation(fields: [catalogId], references: [id])
  catalogId    String?
  circulations Circulation[]
}

model Catalog {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  books       Book[]
}

model Circulation {
  id          String    @id @default(cuid())
  bookId      String
  userId      String
  checkoutAt  DateTime
  dueAt       DateTime
  returnedAt  DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  book        Book      @relation(fields: [bookId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model Fine {
  id          String   @id @default(cuid())
  userId      String
  amount      Float
  paid        Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Report {
  id        String   @id @default(cuid())
  name      String
  type      String
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SystemConfiguration {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


